{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gin411/tree-store/front-end/components/UpdateProduct.js\";\nimport { useMutation, useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport Form from './styles/Form';\nimport DisplayError from './ErrorMessage';\nimport useForm from '../lib/useForm';\nconst SINGLE_PRODUCT_QUERY = gql`\n  query SINGLE_PRODUCT_QUERY($id: ID!) {\n    Product(where: { id: $id }) {\n      id\n      name\n      description\n      price\n    }\n  }\n`;\nconst UPDATE_PRODUCT_MUTATION = gql`\n  mutation UPDATE_PRODUCT_MUTATION(\n    $id: ID!\n    $name: String\n    $description: String\n    $price: Int\n  ) {\n    updateProduct(\n      id: $id\n      data: { name: $name, description: $description, price: $price }\n    ) {\n      id\n      name\n      description\n      price\n    }\n  }\n`;\nexport default function UpdateProduct({\n  id\n}) {\n  // 1 We need to get the exitisng product\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(SINGLE_PRODUCT_QUERY, {\n    variables: {\n      id\n    }\n  }); //   console.log(data);\n  // 2 we need to get the mutation to update the product\n  // destruscting data variable into new variable called updateData\n\n  const [updateProduct, {\n    data: updateData,\n    error: updateError,\n    loading: updateLoading\n  }] = useMutation(UPDATE_PRODUCT_MUTATION); // 2.5 create some state for the form input\n  // our initial stage is initially empty until the loading can come in\n\n  const {\n    inputs,\n    handleChange,\n    clearForm,\n    resetForm\n  } = useForm(data === null || data === void 0 ? void 0 : data.Product); // 3 we need the form to handle the updates\n\n  console.log(inputs);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"I am loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 23\n  }, this);\n  return (\n    /*#__PURE__*/\n    // a field set is a way for you ro group multiple fields\n    _jsxDEV(Form // Todo handle submit\n    , {\n      onSubmit: async e => {\n        //     // stop the form from putting the info the url\n        e.preventDefault();\n        const res = await updateProduct({\n          variables: {\n            id,\n            name: inputs.name,\n            description: inputs.description,\n            price: inputs.price\n          }\n        }).catch(console.error);\n        console.log(res);\n      },\n      children: [/*#__PURE__*/_jsxDEV(DisplayError, {\n        error: error || updateError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        disabled: updateLoading,\n        \"aria-busy\": updateLoading,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            name: \"name\",\n            placeholder: \"Name\",\n            value: inputs.name,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"price\",\n          children: [\"Price\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"price\",\n            name: \"price\",\n            placeholder: \"Price\",\n            value: inputs.price,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: [\"Description\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            type: \"text\",\n            id: \"description\",\n            name: \"description\",\n            placeholder: \"Description\",\n            value: inputs.description,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Product :>\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this)\n  );\n}","map":{"version":3,"sources":["/Users/gin411/tree-store/front-end/components/UpdateProduct.js"],"names":["useMutation","useQuery","gql","Form","DisplayError","useForm","SINGLE_PRODUCT_QUERY","UPDATE_PRODUCT_MUTATION","UpdateProduct","id","data","error","loading","variables","updateProduct","updateData","updateError","updateLoading","inputs","handleChange","clearForm","resetForm","Product","console","log","e","preventDefault","res","name","description","price","catch"],"mappings":"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","sourcesContent":["import { useMutation, useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport Form from './styles/Form';\nimport DisplayError from './ErrorMessage';\nimport useForm from '../lib/useForm';\n\nconst SINGLE_PRODUCT_QUERY = gql`\n  query SINGLE_PRODUCT_QUERY($id: ID!) {\n    Product(where: { id: $id }) {\n      id\n      name\n      description\n      price\n    }\n  }\n`;\n\nconst UPDATE_PRODUCT_MUTATION = gql`\n  mutation UPDATE_PRODUCT_MUTATION(\n    $id: ID!\n    $name: String\n    $description: String\n    $price: Int\n  ) {\n    updateProduct(\n      id: $id\n      data: { name: $name, description: $description, price: $price }\n    ) {\n      id\n      name\n      description\n      price\n    }\n  }\n`;\n\nexport default function UpdateProduct({ id }) {\n  // 1 We need to get the exitisng product\n  const { data, error, loading } = useQuery(SINGLE_PRODUCT_QUERY, {\n    variables: {\n      id,\n    },\n  });\n\n  //   console.log(data);\n\n  // 2 we need to get the mutation to update the product\n  // destruscting data variable into new variable called updateData\n\n  const [\n    updateProduct,\n    { data: updateData, error: updateError, loading: updateLoading },\n  ] = useMutation(UPDATE_PRODUCT_MUTATION);\n  // 2.5 create some state for the form input\n  // our initial stage is initially empty until the loading can come in\n  const { inputs, handleChange, clearForm, resetForm } = useForm(data?.Product);\n\n  // 3 we need the form to handle the updates\n  console.log(inputs);\n  if (loading) return <p>I am loading</p>;\n\n  return (\n    // a field set is a way for you ro group multiple fields\n    <Form\n      // Todo handle submit\n      onSubmit={async (e) => {\n        //     // stop the form from putting the info the url\n        e.preventDefault();\n        const res = await updateProduct({\n          variables: {\n            id,\n\n            name: inputs.name,\n            description: inputs.description,\n            price: inputs.price,\n          },\n        }).catch(console.error);\n        console.log(res);\n      }}\n    >\n      <DisplayError error={error || updateError} />\n\n      <fieldset disabled={updateLoading} aria-busy={updateLoading}>\n        <label htmlFor=\"name\">\n          Name\n          <input\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            placeholder=\"Name\"\n            value={inputs.name}\n            onChange={handleChange}\n          />\n        </label>\n        <label htmlFor=\"price\">\n          Price\n          <input\n            type=\"number\"\n            id=\"price\"\n            name=\"price\"\n            placeholder=\"Price\"\n            value={inputs.price}\n            onChange={handleChange}\n          />\n        </label>\n        <label htmlFor=\"description\">\n          Description\n          <textarea\n            type=\"text\"\n            id=\"description\"\n            name=\"description\"\n            placeholder=\"Description\"\n            value={inputs.description}\n            onChange={handleChange}\n          />\n        </label>\n      </fieldset>\n\n      <button type=\"submit\">Update Product :></button>\n    </Form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}